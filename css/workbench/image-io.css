/*
  Styles for image-based input and output areas in the workbench.
*/

/* --- General Image I/O Containers --- */
#image-drop-area,
.output-area {
    padding: 16px;
    border: 1px dashed var(--border-color);
    border-radius: var(--radius);
    position: relative;
    width: 100%;
    padding-bottom: 65%; /* Maintain aspect ratio */
    min-height: 200px;
    transition: background-color 0.1s ease-out, border-color 0.1s ease-out;
}

#image-drop-area:hover:not(.drag-over) {
    background-color: var(--bg-secondary);
    border-color: var(--text-secondary);
}

#image-drop-area > .aspect-ratio-content-wrapper,
.output-area > .aspect-ratio-content-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 0;
    box-sizing: border-box;
    padding: 10px;
    overflow: hidden;
}

.image-input-label {
    /* Keep this for generic image inputs */
    cursor: pointer;
    color: var(--text-secondary);
    font-weight: 500;
    font-size: 1.1rem;
    text-align: center;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

/* Styles for the placeholder when no image is loaded for SAM tasks */
#image-drop-area:not([data-has-content='true']) #image-input-placeholder {
    display: flex; /* Ensure it's a flex container */
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 8px;
    color: var(--text-secondary);
    font-size: 1.1rem;
    text-align: center;
    width: 100%;
    height: 100%;
}
#image-drop-area:not([data-has-content='true'])
    #image-input-placeholder
    .material-icons {
    font-size: 3rem; /* Larger icon */
}

#image-preview,
#output-canvas {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    border-radius: var(--radius);
    display: block;
}

/* --- Image Grid Styling (for Batch Mode) --- */
.image-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    gap: 12px;
    width: 100%;
    height: 100%;
    overflow-y: auto;
    padding: 10px;
}

.grid-image-item {
    position: relative;
    aspect-ratio: 1 / 1;
    border: 1px solid var(--border-color);
    border-radius: var(--radius);
    overflow: hidden;
    background-color: var(--bg-primary);
    cursor: pointer;
}

.grid-image-item:hover .grid-item-overlay {
    opacity: 1;
}

.grid-image-item img,
.grid-image-item canvas {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
}

.grid-item-overlay {
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.4);
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
    pointer-events: none;
}
.grid-item-overlay .material-icons {
    font-size: 36px;
}

/* --- Comparison Slider --- */
#image-compare-slider {
    position: absolute;
    width: 3px;
    background-color: var(--accent-primary-translucent);
    cursor: ew-resize;
    transform: translateX(-1.5px);
    z-index: 10;
    pointer-events: all;
}
.slider-handle {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 12px;
    height: 50px;
    transform: translate(-50%, -50%);
    background-color: var(--bg-primary);
    border: 2px solid var(--accent-primary);
    border-radius: 6px;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.5);
}

/* For image segmentation with prompts */
#prompt-points-container {
    position: absolute;
    inset: 0;
    pointer-events: none; /* Clicks should pass through to the underlying image area */
}

.prompt-point {
    position: absolute;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    transform: translate(-50%, -50%);
    box-shadow: 0 0 0 2px white, 0 0 3px 1px rgba(0, 0, 0, 0.5);
    cursor: pointer; /* Make them clickable for removal */
    pointer-events: auto; /* Allow clicks on points themselves */
}
.prompt-point.positive {
    background-color: var(--status-found-color); /* Green */
}
.prompt-point.negative {
    background-color: var(--status-missing-color); /* Red */
}
