/*
  Styles specific to the AI PowerToys workbench view.
*/

/* --- Model Cards --- */
#models-list {
    display: grid;
    grid-template-columns: 1fr;
    gap: 12px;
}

.model-card {
    background-color: var(--bg-tertiary);
    padding: 12px;
    border-radius: var(--radius);
    border: 1px solid var(--border-color);
    display: flex;
    flex-direction: column;
    gap: 8px;
    transition: none;
    overflow: hidden;
}

.model-card p {
    margin: 0 0 8px 0;
    font-size: 0.85rem;
    line-height: 1.4;
}

.status-found {
    color: var(--status-found-color);
    font-weight: 600;
    font-size: 0.8rem;
}
.status-missing {
    color: var(--status-missing-color);
    font-weight: 600;
    font-size: 0.8rem;
}

/* Progress Bar Styles */
.progress-bar-container {
    width: 100%;
    height: 10px;
    background-color: #e0e0e0;
    border-radius: 5px;
    overflow: hidden;
    margin-top: 6px;
}
.progress-bar-fill {
    height: 100%;
    background-color: #4caf50;
    width: 0%;
    transition: width 0.3s ease-out;
}
html.dark-mode .progress-bar-container {
    background-color: #333;
}
html.dark-mode .progress-bar-fill {
    background-color: #66bb6a;
}

/* --- Model Card Header & Toggle --- */
.model-card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 8px;
    cursor: pointer;
}
.model-card-header h3 {
    margin: 0;
    flex-grow: 1;
    font-size: 1.1rem;
    pointer-events: none;
}
.model-card-toggle-btn {
    width: 24px;
    height: 24px;
    padding: 0;
    background: none;
    border: none;
    color: var(--text-secondary);
    transition: none;
    flex-shrink: 0;
    cursor: pointer;
}
.model-card-toggle-btn:hover {
    color: var(--text-primary);
}
.model-card-toggle-btn svg {
    width: 20px;
    height: 20px;
    pointer-events: none;
}

/* --- Collapsed State --- */
.model-card[data-collapsed='true'] {
    gap: 0;
}
.model-card[data-collapsed='true'] .model-card-content {
    max-height: 0;
    opacity: 0;
    margin: 0;
    padding: 0;
    pointer-events: none;
    overflow: hidden;
}
.model-card[data-collapsed='true'] .model-card-toggle-btn {
    transform: rotate(-90deg);
}

/* --- Active Model State --- */
.model-card[data-active='true'] {
    background-color: var(--bg-primary);
    border: 2px solid var(--accent-primary);
    padding: 11px;
}
.model-card[data-active='true'] .model-card-header {
    cursor: default;
}

/* --- Model Controls --- */
.model-controls {
    display: flex;
    gap: 8px;
    align-items: center;
    margin-top: 8px;
}
.model-controls .variant-selector {
    flex-grow: 1;
    font-size: 0.8rem;
    padding: 6px 10px;
}
.model-controls .select-model-btn,
.model-controls .download-btn {
    padding: 6px 12px;
    font-size: 0.8rem;
    flex-shrink: 0;
}

/* --- Workbench Area --- */
#workbench-area {
    margin-top: 24px;
    border: 1px solid var(--border-color);
    border-radius: var(--radius);
    padding: 24px;
}

/* Two-column layout for main workbench content */
#workbench-main-area {
    display: grid;
    grid-template-columns: 1fr 1fr; /* Two equal columns */
    gap: 24px;
    margin-top: 24px;
}

.workbench-column {
    display: flex;
    flex-direction: column;
    gap: 16px;
}

/* Input/Output Containers */
#image-drop-area,
.output-area {
    padding: 16px;
    border: 1px dashed var(--border-color);
    border-radius: var(--radius);

    position: relative;
    width: 100%;
    padding-bottom: 65%; /* Aspect ratio: 16:10 */
    min-height: 200px;
    transition: background-color 0.1s ease-out, border-color 0.1s ease-out;
}

#image-drop-area:hover:not(.drag-over) {
    background-color: var(--bg-secondary);
    border-color: var(--text-secondary);
}

/* Common positioning for content inside aspect-ratio containers */
#image-drop-area > .aspect-ratio-content-wrapper,
.output-area > .aspect-ratio-content-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; /* Ensure it fills the relative parent */
    display: flex;
    flex-direction: column; /* Default for placeholder */
    align-items: center;
    justify-content: center;
    margin: 0;
    box-sizing: border-box;
    padding: 10px;
    overflow: hidden; /* Keep overflow on the content wrapper itself */
}

/* Input Label and Placeholder */
.image-input-label {
    cursor: pointer;
    color: var(--text-secondary);
    font-weight: 500;
    font-size: 1.1rem;
    text-align: center;
    width: 100%;
    height: 100%;
    display: flex; /* Make the label a flex container */
    flex-direction: column; /* Stack children vertically */
    align-items: center; /* Center horizontally */
    justify-content: center; /* Center vertically */
}

/* Styles for the placeholder text directly */
#image-input-placeholder {
    /* Styles for the text */
}

#image-preview.hidden + #image-input-placeholder {
    display: flex;
}
#image-preview:not(.hidden) + #image-input-placeholder {
    display: none;
}

#image-preview,
#output-canvas {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    border-radius: var(--radius);
    display: block; /* Ensure it behaves as a block element */
}

/* Ensure output content (canvas) is centered */
.output-area .aspect-ratio-content-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Output area specific adjustments */
.output-label {
    position: absolute;
    top: 10px;
    left: 10px;
    width: auto;
    height: auto;
    font-size: 0.9rem;
    color: var(--text-primary);
    background-color: var(--bg-primary);
    padding: 2px 5px;
    border-radius: var(--radius);
    z-index: 1;
    margin-bottom: 0;
}

/* Control groups for input/output (positioned at bottom-right, hidden by default) */
.input-controls,
.output-controls {
    position: absolute;
    bottom: 16px; /* Align with parent's padding */
    right: 16px; /* Align with parent's padding */
    flex-direction: row; /* Ensure buttons are in a row */
    display: flex; /* Arrange buttons in a row */
    gap: 8px; /* Space between buttons */
    z-index: 2; /* Above image/canvas and label */
    opacity: 0; /* Hidden by default */
    pointer-events: none; /* Not clickable when hidden */
    transition: none; 
}

/* Show control groups on hover of their parent containers */
#image-drop-area:hover .input-controls,
.output-area:hover .output-controls {
    opacity: 1;
    pointer-events: auto;
}

/* Hide control groups when parent is explicitly hidden (e.g., during processing) */
.hidden-on-hover-parent.hidden {
    display: none !important;
}

.run-controls {
    margin-top: 24px;
    display: flex;
    align-items: center;
    gap: 16px;
}

.run-controls #status-text {
    flex-grow: 1;
    margin: 0;
    color: var(--text-secondary);
}

/* --- Runtime Controls --- */
#runtime-controls-container {
    background-color: var(--bg-secondary);
    border-radius: var(--radius);
    padding: 16px;
    margin-top: 24px;
    display: flex;
    flex-direction: column;
    gap: 12px;
}

#runtime-controls-container h4 {
    margin-bottom: 4px;
}

.runtime-control {
    display: grid;
    grid-template-columns: 180px 1fr;
    align-items: center;
    gap: 16px;
}

.runtime-control label {
    font-weight: 500;
    font-size: 0.9rem;
}

.runtime-control label span {
    font-weight: 600;
    color: var(--text-primary);
}

/* This rule appears twice; consolidate for clarity if needed.
   Currently, the one above (`#image-drop-area > .aspect-ratio-content-wrapper, ...`)
   is the effective one. */
#image-drop-area .aspect-ratio-content-wrapper,
.output-area .aspect-ratio-content-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 0;
    box-sizing: border-box;
    padding: 10px;
}
